---
import Layout from '../layouts/Layout.astro';
import Navbar from '../components/Navbar.astro';
---

<Layout title="Complete Your Profile - GITGOTPR">
  <Navbar />
  
  <main class="min-h-screen bg-black text-green-100 py-8">
    <div class="max-w-2xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="bg-gray-900 border border-green-600 rounded-lg p-8">
        <div class="text-center mb-8">
          <h1 class="text-3xl font-bold text-green-400 font-mono mb-2">Complete Your Profile</h1>
          <p class="text-green-300 font-mono">Help us learn more about you</p>
        </div>

        <div id="loading" class="text-center py-8">
          <div class="animate-spin rounded-full h-12 w-12 border-b-2 border-green-400 mx-auto"></div>
          <p class="mt-4 text-green-300 font-mono">Loading...</p>
        </div>

        <div id="profile-form" class="hidden">
          <form id="profile-data-form" class="space-y-6">
            <div class="flex items-center mb-6 p-4 bg-gray-800 border border-green-700 rounded-lg">
              <img id="user-avatar" class="h-16 w-16 rounded-full mr-4" src="" alt="User avatar">
              <div>
                <h3 id="user-name" class="text-xl font-semibold text-green-100 font-mono"></h3>
                <p id="user-username" class="text-green-400 font-mono"></p>
              </div>
            </div>

            <div>
              <label for="full_name" class="block text-sm font-medium text-green-300 font-mono mb-2">
                Full Name *
              </label>
              <input
                type="text"
                id="full_name"
                name="full_name"
                required
                class="w-full px-3 py-2 bg-gray-800 border border-green-600 rounded-md text-green-100 font-mono focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-transparent"
                placeholder="Enter your full name"
              >
            </div>

            <div>
              <label for="role" class="block text-sm font-medium text-green-300 font-mono mb-2">
                Role *
              </label>
              <select
                id="role"
                name="role"
                required
                class="w-full px-3 py-2 bg-gray-800 border border-green-600 rounded-md text-green-100 font-mono focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-transparent"
                onchange="toggleYearField()"
              >
                <option value="">Select your role</option>
                <option value="Student">Student</option>
                <option value="Instructor">Instructor</option>
              </select>
            </div>

            <div>
              <label for="college" class="block text-sm font-medium text-green-300 font-mono mb-2">
                College/University *
              </label>
              <input
                type="text"
                id="college"
                name="college"
                required
                class="w-full px-3 py-2 bg-gray-800 border border-green-600 rounded-md text-green-100 font-mono focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-transparent"
                placeholder="Enter your college or university"
              >
            </div>

            <div id="year-field">
              <label for="year" class="block text-sm font-medium text-green-300 font-mono mb-2">
                Year of Study *
              </label>
              <select
                id="year"
                name="year"
                required
                class="w-full px-3 py-2 bg-gray-800 border border-green-600 rounded-md text-green-100 font-mono focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-transparent"
              >
                <option value="">Select your year</option>
                <option value="1st Year">1st Year</option>
                <option value="2nd Year">2nd Year</option>
                <option value="3rd Year">3rd Year</option>
                <option value="4th Year">4th Year</option>
                <option value="Masters">Masters</option>
                <option value="PhD">PhD</option>
                <option value="Other">Other</option>
              </select>
            </div>

            <div>
              <label for="instructor" class="block text-sm font-medium text-green-300 font-mono mb-2">
                Instructor/Professor
              </label>
              <input
                type="text"
                id="instructor"
                name="instructor"
                class="w-full px-3 py-2 bg-gray-800 border border-green-600 rounded-md text-green-100 font-mono focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-transparent"
                placeholder="Enter your instructor's name (optional)"
              >
            </div>

            <div class="pt-4">
              <button
                type="submit"
                id="submit-btn"
                class="w-full bg-gradient-to-r from-green-500 to-lime-400 text-black py-3 px-4 rounded-md font-bold font-mono hover:from-green-600 hover:to-lime-500 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2 focus:ring-offset-gray-900 transform hover:scale-105 transition-all duration-300"
              >
                Complete Profile
              </button>
            </div>
          </form>
        </div>

        <div id="success-message" class="hidden text-center py-8">
          <div class="text-green-400 text-6xl mb-4">âœ…</div>
          <h2 class="text-2xl font-bold text-green-400 font-mono mb-4">Profile Completed!</h2>
          <p class="text-green-300 font-mono mb-6">Welcome to GITGOTPR 2025</p>
          <a href="/leaderboard" class="bg-gradient-to-r from-green-500 to-lime-400 text-black px-6 py-3 rounded-md font-bold font-mono hover:from-green-600 hover:to-lime-500 transition-all duration-300">
            View Leaderboard
          </a>
        </div>

        <div id="error-message" class="hidden bg-red-900 border border-red-600 rounded-lg p-4 mt-6">
          <p class="text-red-100 font-mono text-center">Error updating profile. Please try again.</p>
        </div>
      </div>
    </div>
  </main>
</Layout>

<script>
  const API_BASE = import.meta.env.PUBLIC_API_BASE_URL || 'https://tracking-production-0c48.up.railway.app';
  let userData;
  async function loadUserData() {
    try {
      const response = await fetch(API_BASE + '/auth/me', {
        credentials: 'include'
      });

      if (!response.ok) {
        // User not logged in, redirect to login
        window.location.href = '/login';
        return;
      }

      userData = await response.json();
      // Populate user info
      document.getElementById('user-avatar').src = userData.user.photos[0].value || '/default-avatar.png';
      document.getElementById('user-name').textContent = userData.user.display_name || userData.user.username;
      document.getElementById('user-username').textContent = '@' + userData.user.username;

      // Pre-fill full name if available
      if (userData.display_name) {
        document.getElementById('full_name').value = userData.display_name;
      }

      // Check if user already has profile data
      if (userData.full_name && userData.college && userData.year) {
        // User already completed profile, redirect to leaderboard
        window.location.href = '/leaderboard';
        return;
      }

      document.getElementById('loading').classList.add('hidden');
      document.getElementById('profile-form').classList.remove('hidden');
    } catch (error) {
      console.error('Error loading user data:', error);
      window.location.href = '/login';
    }
  }

  

  async function submitProfile(event) {
    event.preventDefault();
    
    const submitBtn = document.getElementById('submit-btn');
    const formData = new FormData(event.target);
    const role = formData.get('role');
    
    // Disable button and show loading
    submitBtn.disabled = true;
    submitBtn.textContent = 'Saving...';
    submitBtn.classList.add('opacity-50');

    try {
      const profileData = {
        full_name: formData.get('full_name'),
        role: role,
        college: formData.get('college'),
        year: role === 'Student' ? formData.get('year') : null,
        instructor: formData.get('instructor') || null,
        display_name: userData?.user.displayName || userData?.user.username || null,
        avatar_url: userData?.user.photos[0].value || null,
        github_id: userData?.user.username || null,
        pr_count: 0,
        username: userData?.user.username || null
      };
      const response = await fetch(API_BASE + '/user/profile', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        credentials: 'include',
        body: JSON.stringify(profileData)
      });

      if (!response.ok) {
        throw new Error('Failed to update profile');
      }

      // Show success message
      document.getElementById('profile-form').classList.add('hidden');
      document.getElementById('success-message').classList.remove('hidden');
      
      // Redirect to leaderboard after 3 seconds
      setTimeout(() => {
        window.location.href = '/leaderboard';
      }, 3000);

    } catch (error) {
      console.error('Error updating profile:', error);
      document.getElementById('error-message').classList.remove('hidden');
      
      // Re-enable button
      submitBtn.disabled = false;
      submitBtn.textContent = 'Complete Profile';
      submitBtn.classList.remove('opacity-50');
    }
  }

  document.getElementById('profile-data-form').addEventListener('submit', submitProfile);
  loadUserData();
</script>
<script is:inline>
  function toggleYearField() {
    const role = document.getElementById('role').value;
    const yearField = document.getElementById('year-field');
    const yearSelect = document.getElementById('year');
    
    if (role === 'Instructor') {
      // Hide year field for instructors
      yearField.style.display = 'none';
      yearSelect.removeAttribute('required');
      yearSelect.value = ''; // Clear selection
    } else if (role === 'Student') {
      // Show year field for students
      yearField.style.display = 'block';
      yearSelect.setAttribute('required', 'required');
    } else {
      // No role selected, hide year field
      yearField.style.display = 'block';
      yearSelect.setAttribute('required', 'required');
    }
  }
</script>